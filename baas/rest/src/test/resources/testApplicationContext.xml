<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:component-scan base-package="org.usergrid" />
	<context:annotation-config />

	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="singleton" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:/usergrid-test.properties</value>
				<value>${usergrid-custom-spring-test-properties}</value>
			</list>
		</property>
	</bean>

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="properties" />
		<property name="systemPropertiesModeName">
			<value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
		</property>
	</bean>

	<bean id="cassandraUseRemote" class="java.lang.Boolean">
		<constructor-arg value="${cassandra.use_remote}" />
	</bean>
	<bean id="cassandraLocalUrl" class="java.lang.String">
		<constructor-arg value="${cassandra.local.url}" />
	</bean>
	<bean id="cassandraRemoteUrl" class="java.lang.String">
		<constructor-arg value="${cassandra.remote.url}" />
	</bean>
	<bean id="cassandraUrl" class="java.lang.String">
		<constructor-arg
			value="#{cassandraUseRemote ? cassandraRemoteUrl : cassandraLocalUrl}" />
	</bean>
	<util:map id="cassandraCredentials" map-class="java.util.HashMap">
		<entry key="username" value="${cassandra.username}" />
		<entry key="password" value="${cassandra.password}" />
	</util:map>

	<bean id="realm" class="org.usergrid.security.shiro.Realm">
		<property name="name" value="realm" />
	</bean>

	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

	<bean id="securityManager" class="org.usergrid.rest.security.shiro.RestSecurityManager">
		<property name="cacheManager" ref="cacheManager" />
		<property name="realm" ref="realm" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- The Time Resolution used for the cluster -->
	<bean id="microsecondsTimeResolution"
		class="me.prettyprint.cassandra.service.clock.MicrosecondsClockResolution" />

	<bean id="cassandraHostConfigurator"
		class="me.prettyprint.cassandra.service.CassandraHostConfigurator">
		<constructor-arg ref="cassandraUrl" />
		<property name="clockResolution" ref="microsecondsTimeResolution" />
	</bean>

	<bean id="cassandraCluster" class="me.prettyprint.cassandra.service.ThriftCluster">
		<constructor-arg value="${cassandra.cluster}" />
		<constructor-arg ref="cassandraHostConfigurator" />
		<constructor-arg ref="cassandraCredentials" />
	</bean>

	<!-- bean name="lockManager" class="org.usergrid.locking.zookeeper.ZooKeeperLockManagerImpl" 
		/> -->
	<bean name="lockManager" class="org.usergrid.locking.zookeeper.NoOpLockManagerImpl" />

    <bean name="consistencyLevelPolicy" class="me.prettyprint.cassandra.model.ConfigurableConsistencyLevel">
        <property name="defaultReadConsistencyLevel" value="${cassandra.readcl}"/>
        <property name="defaultWriteConsistencyLevel" value="${cassandra.writecl}"/>
    </bean>

	<bean id="cassandraService" class="org.usergrid.persistence.cassandra.CassandraService"
		init-method="init">
		<constructor-arg ref="properties" />
		<constructor-arg ref="cassandraCluster" />
		<constructor-arg ref="cassandraHostConfigurator" />
		<constructor-arg ref="lockManager" />
        <property name="consistencyLevelPolicy" ref="consistencyLevelPolicy"/>
	</bean>
    <bean id="entityManagerFactory"
   		class="org.usergrid.persistence.cassandra.EntityManagerFactoryImpl">
   		<constructor-arg ref="cassandraService" />
           <constructor-arg ref="counterUtils"/>

       </bean>

       <bean id="queueManagerFactory"
             class="org.usergrid.mq.cassandra.QueueManagerFactoryImpl">
           <constructor-arg ref="cassandraService" />
           <constructor-arg ref="counterUtils"/>
       </bean>

       <bean id="simpleBatcher" class="com.usergrid.count.SimpleBatcher">
           <constructor-arg value="1"/>
           <property name="batchSubmitter" ref="batchSubmitter"/>
           <property name="batchSize" value="0"/>
       </bean>

       <bean id="batchSubmitter" class="com.usergrid.count.Slf4JBatchSubmitter"/>

       <bean id="cassandraCounterStore" class="com.usergrid.count.CassandraCounterStore">
           <constructor-arg>
               <bean id="keyspace"
                     factory-bean="cassandraService"
                     factory-method="getUsergridApplicationKeyspace"/>
           </constructor-arg>
       </bean>

       <bean id="counterUtils" class="org.usergrid.persistence.cassandra.CounterUtils">
           <property name="batcher" ref="simpleBatcher"/>
           <property name="counterType" value="n"/>
       </bean>


	<bean id="serviceManagerFactory" class="org.usergrid.services.ServiceManagerFactory">
		<constructor-arg>
			<ref bean="entityManagerFactory" />
		</constructor-arg>
	</bean>

	<bean id="tokenService" class="org.usergrid.security.tokens.cassandra.TokenServiceImpl"/>

	<bean id="managementService" class="org.usergrid.management.cassandra.ManagementServiceImpl" />

	<bean id="mongoServer" class="org.usergrid.mongo.MongoServer"
		init-method="startServer" destroy-method="stopServer" />

	<!-- uncomment for production and when zookeeper is set up and running <bean 
		id="lockManager" class="org.usergrid.locking.zookeeper.ZooKeeperLockManagerImpl"> 
		<constructor-arg ref="${zookeeper.hosts}" /> <constructor-arg ref="${zookeeper.sessionTimeout}" 
		/> <constructor-arg ref="${zookeeper.maxAttempts}" /> </bean> -->

	<bean id="databaseInitializer" class="org.usergrid.rest.DatabaseInitializer"
		init-method="init" />

    <bean id="usergridSystemMonitor" class="org.usergrid.system.UsergridSystemMonitor">
        <constructor-arg value="${usergrid.version.build}"/>
        <constructor-arg ref="cassandraCluster"/>
    </bean>

	<bean id="indexBucketLocator" class="org.usergrid.persistence.cassandra.SimpleIndexBucketLocatorImpl">
    	<constructor-arg value="${usergrid.index.defaultbucketsize}"/>
    </bean>

    <bean id="applicationCreator" class="org.usergrid.management.cassandra.ApplicationCreatorImpl">
        <constructor-arg ref="managementService"/>
        <constructor-arg ref="entityManagerFactory"/>
    </bean>

</beans>
